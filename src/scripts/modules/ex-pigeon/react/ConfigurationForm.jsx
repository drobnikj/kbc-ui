import React, {PropTypes} from 'react';

import {FormGroup, FormControl, Form, ControlLabel, Col, Checkbox, InputGroup, Button} from 'react-bootstrap';
import ClipboardButton from '../../../react/common/Clipboard';
import actionsProvisioning from '../actionsProvisioning';
import storeProvisioning, {storeMixins} from '../storeProvisioning';
import RoutesStore from '../../../stores/RoutesStore';
import createStoreMixin from '../../../react/mixins/createStoreMixin';
import {RefreshIcon} from '@keboola/indigo-ui';

export default React.createClass({

  mixins: [createStoreMixin(...storeMixins)],

  getStateFromStores() {
    const componentId = 'keboola.ex-pigeon';
    const configId = RoutesStore.getCurrentRouteParam('config');
    const actions = actionsProvisioning(configId, componentId);
    const store = storeProvisioning(configId, componentId);
    return {
      actions: actions,
      store: store
    };
  },

  propTypes: {
    requestedEmail: PropTypes.string.isRequired,
    incremental: PropTypes.bool.isRequired,
    delimiter: PropTypes.string.isRequired,
    enclosure: PropTypes.string.isRequired,
    onChange: PropTypes.func.isRequired
  },

  onChangeDelimiter(e) {
    this.props.onChange('delimiter', e.target.value);
  },

  onChangeEnclosure(e) {
    this.props.onChange('enclosure', e.target.value);
  },

  onChangeIncremental() {
    this.props.onChange('incremental', !this.props.incremental);
  },

  componentDidMount() {
    this.state.actions.requestEmail();
  },

  renderClipboardButton() {
    const isLoading = typeof this.props.requestedEmail === 'undefined' ? true : false;
    if (isLoading) {
      return <RefreshIcon isLoading={isLoading}/>;
    } else {
      return (<ClipboardButton text={this.props.requestedEmail} label="Copy email" />);
    }
  },

  render()  {
    return (
    <Form horizontal>
      <FormGroup>
        <Col componentClass={ControlLabel} sm={4}>
          Email
        </Col>
        <Col sm={8}>
          <InputGroup>
            <FormControl
                type="email"
                placeholder="Creating email, please wait"
                readOnly
                value={this.props.requestedEmail}
                title="Email generated by Pigeon"/>
              <InputGroup.Button>
                <Button bsSize="lg">
                  {this.renderClipboardButton()}
                </Button>
              </InputGroup.Button>
            </InputGroup>
        </Col>
      </FormGroup>
      <FormGroup>
        <Col componentClass={ControlLabel} sm={4}>
          Delimeter
        </Col>
        <Col sm={8}>
          <FormControl
              type="text"
              placeholder="Field delimeter used in CSV files"
              value={this.props.delimiter}
              onChange={this.onChangeDelimiter}/>
        </Col>
      </FormGroup>
      <FormGroup>
        <Col componentClass={ControlLabel} sm={4}>
          Enclosure
        </Col>
        <Col sm={8}>
          <FormControl
              type="text"
              placeholder="Field enclosure used in CSV files"
              value={this.props.enclosure}
              onChange={this.onChangeEnclosure}/>
        </Col>
      </FormGroup>
      <FormGroup>
        <Col componentClass={ControlLabel} sm={4}>
          Incremental
        </Col>
        <Col sm={8}>
          <Checkbox
              checked={this.props.incremental}
              onChange={this.onChangeIncremental}>
              Incremental load
          </Checkbox>
        </Col>
      </FormGroup>
    </Form>);
  }
});
